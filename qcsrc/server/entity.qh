enum {
	INITPRIO_FIRST,
	INITPRIO_GAMETYPE,
	INITPRIO_GAMETYPE_FALLBACK,
	INITPRIO_CVARS,
	INITPRIO_FINDTARGET,
	INITPRIO_DROPTOFLOOR,
	INITPRIO_SETLOCATION,
	INITPRIO_LINKDOORS,
	INITPRIO_LAST,
};

.vector dropped_origin;
void(entity for_e, void(void) func, float order) entity_initialize;
void(void) entity_initialize_run;
void(entity platform) entity_drop_entities;
void(void) entity_droptofloor;
vector(entity box, vector org) entity_nearest_point_on_box;
float(entity e, float t) entity_move_out_of_solid_with_type;
#define entity_move_out_of_solid(x) entity_move_out_of_solid_with_type(x, TRACE_MOVE_WORLDONLY)
float(entity e, float goodcontents, float badcontents, float badsurfaceflags, float attempts, float maxaboveground, float shiftdistance) entity_move_to_random_location;
void() entity_movedir_setup;
void(entity ent, float when, float fadetime) entity_fade_setup;
void(string s) entity_abort;
#define ENTITY_CENTER(e) (e.origin + (e.mins + e.maxs) * .5)
float entity_not_per_player;
float entity_per_player_force;
#define ENTITY_NOT_PER_PLAYER() do { entity_not_per_player = TRUE; } while (0)
#define ENTITY_PER_PLAYER_FORCE() do { entity_per_player_force = TRUE; } while (0)
float entity_per_player_entities;
#define entity_abort builtin_objerror
