float g_balance_health_limit;
float g_balance_armor_limit;
float g_maxplayers_spectator_blocktime;
float client_button_atck2_busy;

void client_initialize();
float() client_preconnect_abort;
void(entity e) client_fix_cvars;
void client_kill_now_team_change(entity cl, float _team);
void() client_init_spawn;
void() client_cvars_request;
void() client_cvars_parse;
void() client_cvars_free;
void(entity spot) client_put_to_spot;
void(string _name) client_mute_ifneeded;
float() client_join_allowed;
#define CLIENT_FOR_EACH_SLOT(v) for(v = world; (v = nextent(v)) && (num_for_edict(v) <= client_max_count); )
#define CLIENT_FOR_EACH(v) CLIENT_FOR_EACH_SLOT(v) if(v.flags & FL_CLIENT)
#define CLIENT_FOR_EACH_REAL(v) CLIENT_FOR_EACH(v) if(clienttype(v) == CLIENTTYPE_REAL)
#define CLIENT_FOR_EACH_BOT(v) CLIENT_FOR_EACH(v) if(clienttype(v) == CLIENTTYPE_BOT)
float client_entity_from_argv_firsttoken;
entity(float tokens, float idx) client_entity_from_argv;
void(entity pl, float tstart, float dt) client_write_recordmarker;
string client_stuff;
string client_fog;
float client_max_count;
var .float clientversion;
.string clid;
string client_abuserplayername;
void(entity cl, vector a) client_view_angles_set;
void(entity cl) client_send_stuff;

.float client_flags;
enum {
	CLIENT_FLAG_SHOWWEAPONS = 2,
	CLIENT_FLAG_SCREENDAMAGE = 4,
	CLIENT_FLAG_SIMPLEITEMS = 8,
	CLIENT_FLAG_AUTOSWITCH = 16,
	CLIENT_FLAG_AUTOTAUNT = 32,
	CLIENT_FLAG_NOPOGOSTICK = 64,
	CLIENT_FLAG_RM_SHOWSPEC = 128,
	CLIENT_FLAG_RM_ANONSPEC = 256,
};
